version: 0.0.1

# code to execute prior to parsing
preamble: >
 const nu = 1e-6;
 const ni = 50;
 const nj = 10;
 const u = .5;
 const Re = u * nj /nu;
 const datadir = joinpath("data","reynolds");

# data
datadir: { value: datadir, expr: true }

# material properties
rho_0: { value: 1.0, expr: false}
nu: { value: nu, expr: true}

# lattice parameterization
dx: { value: 1.0, expr: false}
dt: { value: 1.0, expr: false}
ni: { value: ni, expr: true}
nj: { value: nj, expr: true}

# simulation parameterization
simtype: default
nsteps: { value: 1000, expr: false}
col_f: init_col_srt(constit_relation_f, forcing_kf);

# boundaries
sbounds:
 value: "[1 ni 1 nj;]'"
 expr: true

cbounds:
 value: "[1 ni 1 nj;]'"
 expr: true

# boundary conditions
bcs:
 - north_bounce_back!
 - south_bounce_back!
 - periodic_east_to_west!

# callback functions
callbacks:
 - print_step_callback(25, "running")

# clean-up, backup, write out
 - >
   (sim::Sim, k::Int) -> begin
   writedlm(joinpath(datadir, "ux_profile.dsv"),
   extract_ux_prof_callback(convert(Int64, round (ni/2)))(sim),
   ",");
   end
 - dumpsim(datadir, Sim, 200)